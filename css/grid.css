/* Grid CSS - Arcade Battle Grid - FIXED VERSION */
.grid-container {
    flex: 1;
    background: #000;
    border: 4px solid #444;
    border-radius: 10px;
    padding: var(--spacing-md);
    box-shadow:
            inset 0 0 30px rgba(0, 0, 0, 0.8),
            0 0 20px rgba(255, 107, 53, 0.2);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    /* CRITICAL: Set max dimensions to contain the grid */
    max-width: 100%;
    max-height: 100%;
    min-height: 400px; /* Ensure minimum height */
}

/* Arcade grid glow */
.grid-container::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle,
    rgba(255, 107, 53, 0.1) 0%,
    transparent 70%);
    animation: pulse-glow 4s ease-in-out infinite;
}

@keyframes pulse-glow {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
}

.grid {
    display: grid;
    gap: 2px;
    background: #111;
    padding: 4px;
    border-radius: 8px;
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);

    /* CRITICAL: Make grid fit within container */
    width: 100%;
    height: 100%;
    max-width: calc(100vw - 400px); /* Account for control panel width */
    max-height: calc(100vh - 200px); /* Account for header and margins */

    /* Ensure grid maintains aspect ratio and fits */
    aspect-ratio: 1; /* Keep grid square */
    max-width: min(calc(100vw - 400px), calc(100vh - 200px));
}

/* Grid Cell - Arcade Pixel Style - RESPONSIVE VERSION */
.grid-cell {
    /* CRITICAL: Use dynamic sizing that scales with grid container */
    width: 100%;
    height: 100%;
    aspect-ratio: 1; /* Keep cells square */

    /* Remove fixed sizes that cause overflow */
    min-width: 0;
    min-height: 0;

    background-color: #1a1a1a;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    border: 1px solid #333;
    cursor: pointer;
    transition: all var(--transition-fast);
    position: relative;
    overflow: hidden;

    /* Ensure minimum visual size for very large grids */
    min-width: 15px;
    min-height: 15px;
}

/* Pixel art hover effect */
.grid-cell:hover {
    background-color: #2a2a2a;
    border-color: var(--naruto-orange);
    transform: scale(1.1);
    z-index: 10;
    box-shadow: 0 0 10px rgba(255, 107, 53, 0.5);
}

/* Node Types - Arcade Style */
.grid-cell.start-node {
    background-image: url('../assets/naruto.png');
    background-color: transparent;
    border: 2px solid #fff;
    box-shadow:
            0 0 20px var(--naruto-orange),
            inset 0 0 10px rgba(255,255,255,0.5);
    animation: start-pulse 1s ease-in-out infinite;
}

.grid-cell.start-node::after {
    content: '';
}

.grid-cell.end-node {
    background-image: url('../assets/madara.png');
    background-color: transparent;
    border: 2px solid #fff;
    box-shadow:
            0 0 20px var(--hokage-red),
            inset 0 0 10px rgba(255,255,255,0.5);
    animation: end-pulse 1s ease-in-out infinite;
}

.grid-cell.end-node::after {
    content: '';
}

/* Base wall styling - applies to all wall types */
.grid-cell.wall-node {
    background-color: #333;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    border: 1px solid #222;
    box-shadow: inset 0 0 5px rgba(0,0,0,0.8);
    animation: wall-slam 0.2s ease-out;
}

/* Specific wall type 1 - obstacle1.png */
.grid-cell.wall-node.wall-type-1 {
    background-image: url('../assets/obstacle1.png');
}

/* Specific wall type 2 - obstacle2.png */
.grid-cell.wall-node.wall-type-2 {
    background-image: url('../assets/obstacle2.png');
}

.grid-cell.visited-node {
    background-color: var(--naruto-orange);
    border-color: #FFA500;
    box-shadow:
            0 0 10px var(--naruto-orange),
            inset 0 0 5px rgba(255,255,255,0.3);
    animation: visited-pop 0.3s ease-out;
}

.grid-cell.path-node {
    background-image: url('../assets/attack.png');
    background-color: transparent;
    border: 2px solid #fff;
    box-shadow:
            0 0 15px var(--leaf-green),
            inset 0 0 10px rgba(255,255,255,0.5);
    animation: path-victory 0.4s ease-out;
}

/* Arcade Animations */
@keyframes start-pulse {
    0%, 100% {
        transform: scale(1);
        box-shadow: 0 0 20px var(--naruto-orange);
    }
    50% {
        transform: scale(1.05);
        box-shadow: 0 0 30px var(--naruto-orange);
    }
}

@keyframes end-pulse {
    0%, 100% {
        transform: scale(1);
        box-shadow: 0 0 20px var(--hokage-red);
    }
    50% {
        transform: scale(1.05);
        box-shadow: 0 0 30px var(--hokage-red);
    }
}

@keyframes wall-slam {
    0% {
        transform: scale(0) rotate(180deg);
        opacity: 0;
    }
    50% {
        transform: scale(1.2) rotate(90deg);
    }
    100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
}

@keyframes visited-pop {
    0% {
        transform: scale(0);
        background-color: var(--naruto-orange);
        border-radius: 50%;
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
        border-radius: 0;
        background-color: var(--naruto-orange);
    }
}

@keyframes path-victory {
    0% {
        transform: scale(0) rotate(0deg);
        background-color: var(--naruto-orange);
    }
    50% {
        transform: scale(1.3) rotate(180deg);
    }
    100% {
        transform: scale(1) rotate(360deg);
    }
}

/* Responsive Grid - Enhanced */
@media (max-width: 1200px) {
    .grid {
        max-width: calc(100vw - 350px);
    }
}

@media (max-width: 768px) {
    .grid-container {
        padding: var(--spacing-sm);
        border-width: 2px;
        min-height: 300px;
    }

    .grid {
        gap: 1px;
        padding: 2px;
        max-width: 100%;
        max-height: calc(50vh);
    }

    .grid-cell {
        min-width: 12px;
        min-height: 12px;
    }
}

/* Very large grids (20x20+) adjustments */
@media (min-width: 769px) {
    .grid[style*="grid-template-columns: repeat(15"],
    .grid[style*="grid-template-columns: repeat(16"],
    .grid[style*="grid-template-columns: repeat(17"],
    .grid[style*="grid-template-columns: repeat(18"],
    .grid[style*="grid-template-columns: repeat(19"],
    .grid[style*="grid-template-columns: repeat(20"] {
        gap: 1px;
        padding: 2px;
    }

    .grid[style*="grid-template-columns: repeat(15"] .grid-cell,
    .grid[style*="grid-template-columns: repeat(16"] .grid-cell,
    .grid[style*="grid-template-columns: repeat(17"] .grid-cell,
    .grid[style*="grid-template-columns: repeat(18"] .grid-cell,
    .grid[style*="grid-template-columns: repeat(19"] .grid-cell,
    .grid[style*="grid-template-columns: repeat(20"] .grid-cell {
        border-width: 0.5px;
        min-width: 12px;
        min-height: 12px;
    }
}

/* Specific grid size optimizations */
.grid-size-15 {
    gap: 1px;
}

.grid-size-20 {
    gap: 1px;
    padding: 2px;
}

.grid-size-15 .grid-cell,
.grid-size-20 .grid-cell {
    border-width: 0.5px;
}

/* Ensure grid cells scale properly for large grids */
.grid {
    container-type: size;
}

@container (max-width: 600px) {
    .grid-cell {
        min-width: 8px;
        min-height: 8px;
        border-width: 0.5px;
    }
}